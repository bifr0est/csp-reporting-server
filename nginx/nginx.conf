worker_processes auto;

events {
    worker_connections 1024;
}

http {
    upstream csp_receiver_service {
        server csp-receiver:5000;
    }

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # --- Rate Limiting Zone Definition ---
    # Defines a shared memory zone 'csp_report_limit' of 10MB.
    # Allows 5 requests per second (r/s) from a single IP address on average.
    # 'burst=10' allows a burst of up to 10 requests, with excess delayed or rejected.
    # 'nodelay' means if burst is exceeded, requests are rejected immediately rather than delayed (optional).
    limit_req_zone $binary_remote_addr zone=csp_report_limit:10m rate=5r/s;
    # ------------------------------------

    # Optional HTTP server for redirects (can be removed if you only want HTTPS)
    server {
        listen 80;
        server_name ${DOMAIN_NAME}; # Set in .env file

        # Redirect all HTTP to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Main HTTPS server for TLS-ALPN-01
    server {
        listen 443 ssl http2;
        server_name ${DOMAIN_NAME}; # Set in .env file

        # Let's Encrypt certificate paths (will be created by certbot)
        ssl_certificate /etc/nginx/certs/live/${DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/live/${DOMAIN_NAME}/privkey.pem;

        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
        
        # SSL session settings
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_stapling on;
        ssl_stapling_verify on;

        # --- Security Headers ---
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # HSTS - Enable this after testing
        # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        location /csp-report {
            # --- Apply Rate Limiting to this specific location ---
            limit_req zone=csp_report_limit burst=10 nodelay; # Allow burst of 10, then reject (503 error)
            # -------------------------------------------------

            proxy_pass http://csp_receiver_service;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            client_max_body_size 2m; 

            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;

            proxy_pass_request_body on; 
            proxy_pass_request_headers on;
        }

        # Health check endpoint (optional)
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Block all other requests (since this is CSP-only server)
        location / {
            return 404 "Not Found\n";
            add_header Content-Type text/plain;
        }
    }
}